{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,EAAE,kBAAkB,EAA2B,MAAM,gCAAgC,CAAC;AAQ7F,MAAM,OAAO,gBAAiB,SAAQ,SAAS;IAC7C,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IAEF,KAAK,CAAC,0BAA0B,CAAC,OAAY;QAC1C,GAAG,CAAC,WAAW,CAAC,gBAAgB,EAAE,KAAK,EAAE,KAAU,EAAE,EAAE;YACrD,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBAEvB,MAAM,WAAW,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC;gBAC3C,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,aAAa,CAAC,iBAAiB,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;gBAC9F;;;;;;;;;;qBAUK;gBAET,MAAM,YAAY,GAAoC;oBACrD,KAAK,EAAE,eAAe;oBACtB,IAAI,EAAE,8BAA8B;oBACpC,EAAE,EAAE,CAAC;oBACL,QAAQ,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE;oBAC7C,YAAY,EAAE,EAAE;oBAChB,KAAK,EAAE,IAAI;oBACX,MAAM,EAAE,MAAM;iBACd,CAAC;gBAEF,MAAM,kBAAkB,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;aAClE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAEF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { App } from '@capacitor/app';\nimport { LocalNotifications, LocalNotificationSchema } from '@capacitor/local-notifications';\n// const { App, LocalNotifications } = Plugins;\nimport type { backgroundrunPlugin } from './definitions';\n\ninterface ExtendedLocalNotificationSchema extends LocalNotificationSchema {\n  iconId: number;\n}\n\nexport class backgroundrunWeb extends WebPlugin implements backgroundrunPlugin {\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n\n\tasync showNotificationOnAppClose(context: any) {\n    App.addListener('appStateChange', async (state: any) => {\n      if (!state.isActive) {\n\n\t\t\t\tconst packageName = context.getPackageName();\n    \t\tconst iconId = context.getResources().getIdentifier(\"ic_notification\", \"drawable\", packageName);\n        /*await LocalNotifications.schedule({\n          notifications: [{\n            title: '¡Hasta luego!',\n            body: 'La aplicación se ha cerrado.',\n            id: 1,\n            schedule: { at: new Date(Date.now() + 1000) },\n            actionTypeId: '',\n            extra: null,\n\t\t\t\t\t\ticonId: iconId\n          }]\n        });*/\n\n\t\t\t\tconst notification: ExtendedLocalNotificationSchema = {\n\t\t\t\t\ttitle: '¡Hasta luego!',\n\t\t\t\t\tbody: 'La aplicación se ha cerrado.',\n\t\t\t\t\tid: 1,\n\t\t\t\t\tschedule: { at: new Date(Date.now() + 1000) },\n\t\t\t\t\tactionTypeId: '',\n\t\t\t\t\textra: null,\n\t\t\t\t\ticonId: iconId\n\t\t\t\t};\n\n\t\t\t\tawait LocalNotifications.schedule({ notifications: [notification] });\n      }\n    });\n  }\n\n}\n"]}