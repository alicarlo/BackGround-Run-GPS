{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAO5C,MAAM,OAAO,gBAAiB,SAAQ,SAAS;IAC7C,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IAEF,KAAK,CAAC,0BAA0B;QAC7B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC3C,mEAAmE;IACrE,CAAC;IAEF,KAAK,CAAC,uBAAuB;QAC1B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC3C,mEAAmE;IACrE,CAAC;CAGF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n// import { App } from '@capacitor/app';\n// import { LocalNotifications, LocalNotificationSchema } from '@capacitor/local-notifications';\n// const { App, LocalNotifications } = Plugins;\nimport type { backgroundrunPlugin } from './definitions';\n\n\nexport class backgroundrunWeb extends WebPlugin implements backgroundrunPlugin {\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n\n\tasync showNotificationOnAppClose(): Promise<void> {\n    throw new Error('Method not implemented.');\n    // Implementa aquí la lógica para mostrar la notificación en la web\n  }\n\n\tasync stopNotificationService(): Promise<void> {\n    throw new Error('Method not implemented.');\n    // Implementa aquí la lógica para mostrar la notificación en la web\n  }\n\t\n\n}\n"]}